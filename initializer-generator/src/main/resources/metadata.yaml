initializr:
  env:
    boms:
      apache-dubbo:
        groupId: org.apache.dubbo
        artifactId: dubbo-bom
        versionProperty: dubbo.version
        mappings:
          - compatibilityRange: "2.3.0.M1"
            version: 3.1.7
      apache-dubbo-zookeeper:
        groupId: org.apache.dubbo
        artifactId: dubbo-dependencies-zookeeper
        versionProperty: dubbo.version
        additionalBoms: [ apache-dubbo ]
        mappings:
          - compatibilityRange: "2.3.0.M1"
            version: 3.1.7
      io-grpc:
        groupId: io.grpc
        artifactId: grpc-bom
        versionProperty: grpc.version
        additionalBoms: [ apache-dubbo ]
        order: 2
        mappings:
          - compatibilityRange: "2.3.0.M1"
            version: 1.44.1
    maven:
      parent:
        includeSpringBootBom: true
        groupId: com.example
        artifactId: your-parent-artifactId
        version: 0.0.0-SNAPSHOT
    gradle:
      dependency-management-plugin-version: 1.0.9.RELEASE
    kotlin:
      mappings:
        - compatibilityRange: "[1.5.0.RELEASE,2.0.0.M1)"
          version: 1.2.51
    platform:
      compatibility-range: "2.2.0.RELEASE"
      v1-format-compatibility-range: "[2.0.0.RELEASE,2.4.0-M1)"
      v2-format-compatibility-range: "2.4.0-M1"
    repositories:
      netflix-candidates:
        name: Netflix Candidates
        url: https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates
      spring-releases:
        name: Spring Releases
        url: https://repo.spring.io/release
      sonatype-snapshots:
        name: Sonatype Snapshots
        url: https://oss.sonatype.org/content/repositories/snapshots/
        releasesEnabled: false
        snapshotsEnabled: true
  dependencies:
    - name: Dubbo Core
      bom: apache-dubbo
      content:
        - name: Dubbo Spring Boot Starter
          id: dubbo-starter
          groupId: org.apache.dubbo
          artifactId: dubbo-spring-boot-starter
          description: Dubbo Spring Boot starter
          starter: false
          hide: true
    - name: Dubbo Registry
      content:
        - name: Zookeeper 注册中心
          id: dubbo-registry-zookeeper
          groupId: org.apache.dubbo
          artifactId: dubbo-dependencies-zookeeper
          type: pom
          description: 使用Zookeeper作为Dubbo注册中心
          starter: false
          compatibilityRange: "[2.0.0.RELEASE,3.1.0-M1)"
          bom: apache-dubbo-zookeeper
        - name: Nocos 注册中心
          id: dubbo-registry-nacos
          groupId: org.apache.dubbo
          artifactId: dubbo-registry-nacos
          description: 使用Nacos作为Dubbo注册中心
          starter: false
          bom: apache-dubbo
        - name: metrics-core
          id: metrics-core
          groupId: io.dropwizard.metrics
          artifactId: metrics-core
          starter: false
          hide: true
    - name: Dubbo Protocols
      content:
        - name: Dubbo 协议
          id: dubbo-protocol-default
          description: Dubbo 缺省协议
          starter: false
          codeOnly: true
          archCfg:
            dubbo:
              modules:
                api:
                  code: true
                service:
                  code: true
        - name: gRPC 协议
          id: dubbo-protocol-grpc
          description: gRPC 协议
          starter: false
          bom: io-grpc
          codeOnly: true
          dependencies: ["dubbo-common","grpc-netty-shaded","grpc-protobuf","grpc-stub","grpc-netty" ]
          archCfg:
            dubbo:
              modules:
                api:
                  code: true
                service:
                  code: true
        - name: dubbo-common
          id: dubbo-common
          groupId: org.apache.dubbo
          artifactId: dubbo-common
          starter: false
          hide: true
        - name: grpc-netty-shaded
          id: grpc-netty-shaded
          groupId: io.grpc
          artifactId: grpc-netty-shaded
          starter: false
          hide: true
        - name: grpc-protobuf
          id: grpc-protobuf
          groupId: io.grpc
          artifactId: grpc-protobuf
          starter: false
          hide: true
        - name: grpc-stub
          id: grpc-stub
          groupId: io.grpc
          artifactId: grpc-stub
          starter: false
          hide: true
        - name: grpc-netty
          id: grpc-netty
          groupId: io.grpc
          artifactId: grpc-netty
          starter: false
          hide: true
    - name: Dubbo Serialization
      content:
        - name: hessian 序列化
          id: dubbo-serialization-hessian
          description: Hessian序列化是一种支持动态类型、跨语言、基于对象传输的网络协议，Java对象序列化的二进制流可以被其他语言（如，c++，python）
          starter: false
          codeOnly: true
          dependencies: [ "dubbo-starter" ]
#    - name: Web
#      content:
#        - name: Spring Web
#          id: web
#          description: Build web, including RESTful, applications using Spring MVC. Uses Apache Tomcat as the default embedded container.
#          facets:
#            - web
#            - json
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/rest-service/
#              description: Building a RESTful Web Service
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web
#            - rel: guide
#              href: https://spring.io/guides/gs/serving-web-content/
#              description: Serving Web Content with Spring MVC
#            - rel: guide
#              href: https://spring.io/guides/tutorials/rest/
#              description: Building REST services with Spring
#        - name: Spring Reactive Web
#          id: webflux
#          description: Build reactive web applications with Spring WebFlux and Netty.
#          facets:
#            - json
#            - reactive
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/reactive-rest-service/
#              description: Building a Reactive RESTful Web Service
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.reactive
#        - name: Spring for GraphQL
#          id: graphql
#          compatibilityRange: "2.7.0.M1"
#          description: Build GraphQL applications with Spring for GraphQL and GraphQL Java.
#          facets:
#            - json
#        - name: Rest Repositories
#          id: data-rest
#          facets:
#            - json
#          description: Exposing Spring Data repositories over REST via Spring Data REST.
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-rest/
#              description: Accessing JPA Data with REST
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-neo4j-data-rest/
#              description: Accessing Neo4j Data with REST
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-mongodb-data-rest/
#              description: Accessing MongoDB Data with REST
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto.data-access.exposing-spring-data-repositories-as-rest
#        - name: Spring Session
#          id: session
#          groupId: org.springframework.session
#          artifactId: spring-session-core
#          description: Provides an API and implementations for managing user session information.
#          starter: false
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-session/reference/
#        - name: Rest Repositories HAL Explorer
#          id: data-rest-explorer
#          description: Browsing Spring Data REST repositories in your browser.
#          starter: false
#          groupId: org.springframework.data
#          artifactId: spring-data-rest-hal-explorer
#        - name: Spring HATEOAS
#          id: hateoas
#          description: Eases the creation of RESTful APIs that follow the HATEOAS principle when working with Spring / Spring MVC.
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/rest-hateoas/
#              description: Building a Hypermedia-Driven RESTful Web Service
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.spring-hateoas
#        - name: Spring Web Services
#          id: web-services
#          description: Facilitates contract-first SOAP development. Allows for the creation of flexible web services using one of the many ways to manipulate XML payloads.
#          aliases:
#           - ws
#          links:
#           - rel: guide
#             href: https://spring.io/guides/gs/producing-web-service/
#             description: Producing a SOAP web service
#           - rel: reference
#             href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#io.webservices
#        - name: Jersey
#          id: jersey
#          description: Framework for developing RESTful Web Services in Java that provides support for JAX-RS APIs.
#          facets:
#            - json
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.servlet.jersey
#    - name: Template Engines
#      content:
#        - name: Thymeleaf
#          id: thymeleaf
#          description: A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes.
#          facets:
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/handling-form-submission/
#              description: Handling Form Submission
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.servlet.spring-mvc.template-engines
#        - name: Apache Freemarker
#          id: freemarker
#          description: Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data.
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.servlet.spring-mvc.template-engines
#        - name: Mustache
#          id: mustache
#          description: Logic-less Templates. There are no if statements, else clauses, or for loops. Instead there are only tags.
#          facets:
#            - native
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.servlet.spring-mvc.template-engines
#        - name: Groovy Templates
#          id: groovy-templates
#          description: Groovy templating engine.
#          facets:
#            - web
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.servlet.spring-mvc.template-engines
#    - name: Security
#      content:
#        - name: Spring Security
#          id: security
#          description: Highly customizable authentication and access-control framework for Spring applications.
#          facets:
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/securing-web/
#              description: Securing a Web Application
#            - rel: guide
#              href: https://spring.io/guides/tutorials/spring-boot-oauth2/
#              description: Spring Boot and OAuth2
#            - rel: guide
#              href: https://spring.io/guides/gs/authenticating-ldap/
#              description: Authenticating a User with LDAP
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.security
#        - name: OAuth2 Client
#          id: oauth2-client
#          description: Spring Boot integration for Spring Security's OAuth2/OpenID Connect client features.
#          facets:
#            - native
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.security.oauth2.client
#        - name: OAuth2 Resource Server
#          id: oauth2-resource-server
#          description: Spring Boot integration for Spring Security's OAuth2 resource server features.
#          facets:
#            - native
#          compatibilityRange: 2.1.0.M2
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#web.security.oauth2.server
#        - name: Spring LDAP
#          id: data-ldap
#          description: Makes it easier to build Spring based applications that use the Lightweight Directory Access Protocol.
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.ldap
#        - name: Okta
#          id: okta
#          description: Okta specific configuration for Spring Security/Spring Boot OAuth2 features. Enable your Spring Boot application to work with Okta via OAuth 2.0/OIDC.
#          groupId: com.okta.spring
#          artifactId: okta-spring-boot-starter
#          compatibilityRange: "[2.1.2.RELEASE,3.0.0-M1)"
#          mappings:
#            - compatibilityRange: "[2.2.0.RELEASE,2.4.0-M1)"
#              version: 1.4.0
#            - compatibilityRange: "[2.4.0-M1,2.4.1)"
#              version: 1.5.1
#            - compatibilityRange: "[2.4.1,2.5.0-M1)"
#              version: 2.0.1
#            - compatibilityRange: "[2.5.0-M1,3.0.0-M1)"
#              version: 2.1.6
#          links:
#            - rel: guide
#              href: https://github.com/okta/samples-java-spring/tree/master/okta-hosted-login
#              description: Okta-Hosted Login Page Example
#            - rel: guide
#              href: https://github.com/okta/samples-java-spring/tree/master/custom-login
#              description: Custom Login Page Example
#            - rel: guide
#              href: https://github.com/okta/samples-java-spring/tree/master/resource-server
#              description: Okta Spring Security Resource Server Example
#            - rel: reference
#              href: https://github.com/okta/okta-spring-boot#readme
#              description: Okta Spring Boot documentation
#    - name: SQL
#      content:
#        - name: JDBC API
#          id: jdbc
#          description: Database Connectivity API that defines how a client may connect and query a database.
#          facets:
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/relational-data-access/
#              description: Accessing Relational Data using JDBC with Spring
#            - rel: guide
#              href: https://spring.io/guides/gs/managing-transactions/
#              description: Managing Transactions
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.sql
#        - name: Spring Data JPA
#          id: data-jpa
#          description: Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate.
#          facets:
#            - jpa
#            - native
#          aliases:
#            - jpa
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-jpa/
#              description: Accessing Data with JPA
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.sql.jpa-and-spring-data
#        - name: Spring Data JDBC
#          id: data-jdbc
#          description: Persist data in SQL stores with plain JDBC using Spring Data.
#          facets:
#            - native
#          links:
#            - rel: guide
#              href: https://github.com/spring-projects/spring-data-examples/tree/master/jdbc/basics
#              description: Using Spring Data JDBC
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.sql.jdbc
#        - name: Spring Data R2DBC
#          id: data-r2dbc
#          description: Provides Reactive Relational Database Connectivity to persist data in SQL stores using Spring Data in reactive applications.
#          facets:
#            - reactive
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-r2dbc/
#              description: Accessing data with R2DBC
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.sql.r2dbc
#            - rel: home
#              href: https://r2dbc.io
#              description: R2DBC Homepage
#        - name: MyBatis Framework
#          id: mybatis
#          compatibilityRange: "[2.0.0.RELEASE,3.1.0-M1)"
#          description: Persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.
#          links:
#            - rel: guide
#              href: https://github.com/mybatis/spring-boot-starter/wiki/Quick-Start
#              description: MyBatis Quick Start
#            - rel: reference
#              href: https://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/
#          groupId: org.mybatis.spring.boot
#          artifactId: mybatis-spring-boot-starter
#          mappings:
#            - compatibilityRange: "[2.1.0.RELEASE,2.5.0-M1)"
#              version: 2.1.4
#            - compatibilityRange: "[2.5.0-M1,2.7.0-M1)"
#              version: 2.2.2
#            - compatibilityRange: "[2.7.0-M1,3.0.0-M1)"
#              version: 2.3.0
#            - compatibilityRange: "3.0.0-M1"
#              version: 3.0.0
#        - name: Liquibase Migration
#          id: liquibase
#          description: Liquibase database migration and source control library.
#          groupId: org.liquibase
#          artifactId: liquibase-core
#          starter: false
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto.data-initialization.migration-tool.liquibase
#        - name: Flyway Migration
#          id: flyway
#          description: Version control for your database so you can migrate from any version (incl. an empty database) to the latest version of the schema.
#          groupId: org.flywaydb
#          artifactId: flyway-core
#          starter: false
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto.data-initialization.migration-tool.flyway
#        - name: JOOQ Access Layer
#          id: jooq
#          description: Generate Java code from your database and build type safe SQL queries through a fluent API.
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.sql.jooq
#        - name: IBM DB2 Driver
#          id: db2
#          compatibilityRange: 2.2.0.M6
#          description: A JDBC driver that provides access to IBM DB2.
#          groupId: com.ibm.db2
#          artifactId: jcc
#          scope: runtime
#          starter: false
#        - name: Apache Derby Database
#          id: derby
#          description: An open source relational database implemented entirely in Java.
#          groupId: org.apache.derby
#          artifactId: derby
#          scope: runtime
#          starter: false
#        - name: H2 Database
#          id: h2
#          description: Provides a fast in-memory database that supports JDBC API and R2DBC access, with a small (2mb) footprint. Supports embedded and server modes as well as a browser based console application.
#          facets:
#            - native
#          groupId: com.h2database
#          artifactId: h2
#          scope: runtime
#          starter: false
#        - name: HyperSQL Database
#          id: hsql
#          description: Lightweight 100% Java SQL Database Engine.
#          facets:
#            - native
#          groupId: org.hsqldb
#          artifactId: hsqldb
#          scope: runtime
#          starter: false
#        - name: MariaDB Driver
#          id: mariadb
#          description: MariaDB JDBC and R2DBC driver.
#          groupId: org.mariadb.jdbc
#          artifactId: mariadb-java-client
#          scope: runtime
#          starter: false
#        - name: MS SQL Server Driver
#          id: sqlserver
#          description: A JDBC and R2DBC driver that provides access to Microsoft SQL Server and Azure SQL Database from any Java application.
#          groupId: com.microsoft.sqlserver
#          artifactId: mssql-jdbc
#          scope: runtime
#          starter: false
#        - name: MySQL Driver
#          id: mysql
#          description: MySQL JDBC and R2DBC driver.
#          facets:
#            - native
#          groupId: com.mysql
#          artifactId: mysql-connector-j
#          scope: runtime
#          starter: false
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-mysql/
#              description: Accessing data with MySQL
#        - name: Oracle Driver
#          id: oracle
#          description: A JDBC driver that provides access to Oracle.
#          groupId: com.oracle.database.jdbc
#          artifactId: ojdbc8
#          scope: runtime
#          starter: false
#        - name: PostgreSQL Driver
#          id: postgresql
#          description: A JDBC and R2DBC driver that allows Java programs to connect to a PostgreSQL database using standard, database independent Java code.
#          facets:
#            - native
#          groupId: org.postgresql
#          artifactId: postgresql
#          scope: runtime
#          starter: false
#    - name: NoSQL
#      content:
#        - name: Spring Data Redis (Access+Driver)
#          id: data-redis
#          description: Advanced and thread-safe Java Redis client for synchronous, asynchronous, and reactive usage. Supports Cluster, Sentinel, Pipelining, Auto-Reconnect, Codecs and much more.
#          facets:
#            - native
#          aliases:
#            - redis
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/messaging-redis/
#              description: Messaging with Redis
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.redis
#        - name: Spring Data Reactive Redis
#          id: data-redis-reactive
#          description: Access Redis key-value data stores in a reactive fashion with Spring Data Redis.
#          facets:
#            - reactive
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/messaging-redis/
#              description: Messaging with Redis
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.redis
#        - name: Spring Data MongoDB
#          id: data-mongodb
#          description: Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time.
#          facets:
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-mongodb/
#              description: Accessing Data with MongoDB
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.mongodb
#        - name: Spring Data Reactive MongoDB
#          id: data-mongodb-reactive
#          description: Provides asynchronous stream processing with non-blocking back pressure for MongoDB.
#          facets:
#            - reactive
#            - native
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.mongodb
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-mongodb/
#              description: Accessing Data with MongoDB
#        - name: Spring Data Elasticsearch (Access+Driver)
#          id: data-elasticsearch
#          description: A distributed, RESTful search and analytics engine with Spring Data Elasticsearch.
#          facets:
#            - native
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.elasticsearch
#        - name: Spring Data for Apache Cassandra
#          id: data-cassandra
#          description: A free and open-source, distributed, NoSQL database management system that offers high-scalability and high-performance.
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.cassandra
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-cassandra/
#        - name: Spring Data Reactive for Apache Cassandra
#          id: data-cassandra-reactive
#          description: Access Cassandra NoSQL Database in a reactive fashion.
#          facets:
#            - reactive
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.cassandra
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-cassandra/
#        - name: Spring Data Couchbase
#          id: data-couchbase
#          description: NoSQL document-oriented database that offers in memory-first architecture, geo-distributed deployments, and workload isolation.
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.couchbase
#        - name: Spring Data Reactive Couchbase
#          id: data-couchbase-reactive
#          description: Access Couchbase NoSQL database in a reactive fashion with Spring Data Couchbase.
#          facets:
#            - reactive
#          links:
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.couchbase
#        - name: Spring Data Neo4j
#          id: data-neo4j
#          description: An open source NoSQL database that stores data structured as graphs consisting of nodes, connected by relationships.
#          facets:
#            - native
#          links:
#            - rel: guide
#              href: https://spring.io/guides/gs/accessing-data-neo4j/
#              description: Accessing Data with Neo4j
#            - rel: reference
#              href: https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#data.nosql.neo4j
#    - name: Hidden Group
#      id: hidden-group
#      hide: true
#      description: this is a hidden dependency group
#      content:
#        - name: cloudshell
#          id: cloudshell
#          codeOnly: true
  types:
    - name: Maven Project
      id: maven-project
      description: Generate a Maven based project archive.
      tags:
        build: maven
        format: project
      default: true
      action: /starter.zip
    - name: Maven POM
      id: maven-build
      description: Generate a Maven pom.xml.
      tags:
        build: maven
        format: build
      default: false
      action: /pom.xml
    - name: Gradle Project
      id: gradle-project
      description: Generate a Gradle based project archive.
      tags:
        build: gradle
        format: project
      default: false
      action: /starter.zip
    - name: Gradle Config
      id: gradle-build
      description: Generate a Gradle build file.
      tags:
        build: gradle
        format: build
      default: false
      action: /build.gradle
  packagings:
    - name: Jar
      id: jar
      default: true
    - name: War
      id: war
      default: false
  javaVersions:
    - id: 19
    - id: 17
    - id: 11
    - id: 1.8
      name: 8
      default: true
  languages:
    - name: Java
      id: java
      default: true
    - name: Kotlin
      id: kotlin
      default: false
    - name: Groovy
      id: groovy
      default: false
  bootVersions:
    - name: 3.0.0
      id: 3.0.0
    - name: 2.7.6
      id: 2.7.6
    - name: 2.6.11
      id: 2.6.11
      default: true
    - name: 2.4.2
      id: 2.4.2
    - name: 2.2.2.RELEASE
      id: 2.2.2.RELEASE
  architecture:
    - id: dubbo
      name: Dubbo微服务架构
      default: true
      subModules:
        - name: api
          description: api 模块，对外提供的 API
        - name: service
          description: service 模块，存放核心业务逻辑代码
          main: true
          dependModules: 'api'